#################################
## GitFS Config
#################################
##
## Trubble doesn't ship with profiles. To get the default profiles, you can
## subscribe via GitFS to the trubblestack_data repo. You must also have either
## python-gitpython or python-pygit2 installed. (python-pygit2 is recommended
## if available

gitfs_remotes:
  - https://github.com/trubblestack/trubblestack_data.git
fileserver_backend:
  - git
  - roots

#################################
## CacheDir and Log_File Locatoin
#################################
##
## Trubble will auto create a DIR in C:\salt, since it uses a lot of salt 
## dependancies.  This will change it so it places the chache and log in with the
## Trubble directory where everything else is stored.

cachedir:
log_file:
  
#################################
## Scheduler Config
#################################
##
## Trubble has a basic scheduler which can be used to schedule jobs at various
## intervals (defined by the `seconds` argument), with optional splay.
##
## Below is a sample schedule for all of the modules includedin trubble

schedule:
  audit_daily:
    function: trubble.audit
    seconds: 86400
    splay: 3600
    kwargs:
      verbose: True
      show_profile: True
    returner: splunk_nova_return
    run_on_start: True
  nebula_fifteen_min:
    function: nebula.queries
    seconds: 900
    splay: 300
    args:
      - fifteen_min
    returner: splunk_nebula_return
    run_on_start: False
  nebula_hour:
    function: nebula.queries
    seconds: 3600
    splay: 900
    args:
      - hour
    returner: splunk_nebula_return
    run_on_start: False
  nebula_day:
    function: nebula.queries
    seconds: 86400
    splay: 3600
    args:
      - day
    returner: splunk_nebula_return
    run_on_start: False
  pulsar:
    function: pulsar.process
    seconds: 30
    returner: splunk_pulsar_return
    run_on_start: True

#################################
## Returner Config
#################################
##
## In order for the sample scheduler config to work, you must configure the
## returners which are being used. In the case of the Splunk returners, you
## must add index, token, and endpoint information

trubblestack:
  returner:
    splunk:
      - token: xxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx
        indexer: splunk-indexer.domain.tld
        index: default
        sourcetype_nova: trubble_audit
        sourcetype_nebula: trubble_osquery
        sourcetype_pulsar: trubble_fim

## If you are instead using the slack returner, you'll need a block similar to
## this:

#slack_pulsar:
#  as_user: true
#  username: calculon
#  channel: channel
#  api_key: xoxb-xxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx
